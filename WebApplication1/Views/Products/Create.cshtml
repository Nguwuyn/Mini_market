@model WebApplication1.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


@section Styles {
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="@Url.Content("~/Content/css/Index.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/css/CreateEditProducts.css")" rel="stylesheet" type="text/css" />
}


@section JavaScript{
    <script>
        function sanitizePrice(div) {
            var price = div.querySelector(".product-price");
            price.value = price.value.replace("đ", "").replace(/,/g, "");
        }

        function ChangeImage(UploadImage) {
            var previewImg = document.getElementById("preview-img");
            if (UploadImage.files && UploadImage.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $(previewImg).attr('src', e.target.result);
                }
                reader.readAsDataURL(UploadImage.files[0]);

                document.getElementById("ProductImg").value = `~/Image/Product/${UploadImage.files[0].name}`;
            }
        }
    </script>
}

<h2>Create</h2>

<form action="../Products/Create" enctype="multipart/form-data" method="post" onsubmit="sanitizePrice(this)">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductID)
    <div class="container-wrap product">
        <div class="product-box">
            <div class="product-image">
                <div id="upload-image-overlay" onclick="document.getElementById('selectedFile').click();">
                    <div class="plus-button"></div>
                    <input id="selectedFile" name="UploadImage" class="d-none" type="file" onchange="ChangeImage(this)" />
                </div>
                <img id="preview-img" src="@Url.Content(Model.ProductImg)" />
            </div>
            <div class="product-content">
                <div class="main-content">
                    <input class="product-price" name="Price" id="Price" type="text" value="@String.Format("{0:#,#.##}", 1000)đ" />
                    <textarea class="edit-product-name" id="ProductName" name="ProductName" rows="12" cols="50">NewProductName</textarea>
                </div>
                <div class="d-flex flex-row justify-content-between">
                    <div class="d-flex flex-column">
                        <div class="form-group">
                            <label class="control-label" for="CategoryID">Hãng sản phẩm</label>
                            <div class="d-flex">
                                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label" for="CategoryID">Số lượng tồn kho</label>
                            <div class="d-flex">
                                <input class="form-control" type="number" name="StockQuantity" min="0" max="9999" id="StockQuantity" value="@Model.StockQuantity" />
                                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label" for="ProductImg">Đường dẫn hình ảnh</label>
                            <div class="d-flex">
                                <input class="form-control" type="text" id="ProductImg" name="ProductImg" value="@Model.ProductImg" />
                                <input class="form-control" type="hidden" id="OldProductImg" name="OldProductImg" value="@Model.ProductImg" />
                                @Html.ValidationMessageFor(model => model.ProductImg, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="d-flex flex-column">
                        <div class="form-group">
                            <label class="control-label" for="Tax">Thuế</label>
                            <div class="d-flex">
                                <input class="form-control" type="number" name="Tax" id="Tax" value="@Model.Tax" />
                                @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <input style="background-color: transparent; border: none" type="submit" value="✓" />
            </div>
        </div>
    </div>
</form>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
